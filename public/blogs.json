[
  {
    "blog_title": "Book Review (JavaScript: The Good Parts by Douglas Crockford)",
    "blog_date": "Sun Jul 30 2017 @ 15:00",
    "blog_photo": "javascript_the_good_parts_cover.png",
    "blog_text": "<div><span style=\"white-space: normal;\">This is a partial review of <a href=\"https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742\">JavaScript: The Good Parts</a>, as I'm currently on chapter 7 (Regular Expressions).</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>Chapter 1 - Good Parts</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">This is a <i>very</i> brief chapter in which Douglas makes the point that <u>no</u> programming language is perfect - you (<i>as a developer</i>) ultimately need to decide which aspects are worth using and which are not. Of course, as with using any tool skillfully, this requires time and experience in order to develop the ability to make these judgement calls - or a guide (like this book).</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">The rest of the chapter discusses some of the <u>good</u> and <u>bad</u> parts of JavaScript (such as <i>object literal notation</i> and the <i>global object</i>, respectively), while making the point that a lot of the \"issues\" with JavaScript are actually with the Document Object Module (DOM) and not JavaScript itself.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">Finally, to answer \"<i>why JavaScript?</i>\" - it's because it's the language of the Web. Java had its shot back in the day (and failed) while JavaScript succeeded, so avoiding JavaScript is not really an option. And since it's <i>very</i> easy to write (bad) JavaScript, it's important to make the time to become adept in reading and writing it.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>Chapter 2 - Grammar</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">This chapter provides a brief overview of the grammar of the <u>good parts</u> of JavaScript - specifically:</span></div><div><ul><li>whitespace and comments (// <i>preferred</i>)<br></li><li>names (<i>rules, reserved words</i>)<br></li><li>numbers (<i>single 64-bit floating point type</i>)<br></li><li>strings (<i>quotes, escape character, immutable property</i>)<br></li><li>statements (<i>expression, conditional, looping, disruptive</i>)<br></li><li>expressions<br></li><li>literals (<i>number, string, object, array, function, regexp</i>)<br></li><li>functions<br></li></ul></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>Chapter 3 - Objects</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">This chapter discusses <u>objects</u> (arrays, functions, regular expressions and object literals), including:</span></div><div><ul><li>how to create an object<br></li><li>property aspects<br></li><li>retrieving values<br></li><li>updating an object<br></li><li>reference (<i>objects are never copied</i>)<br></li><li>prototype (<i>Object.prototype, prototype link</i>)<br></li><li>reflection (<i>inspecting objects</i>)<br></li><li>enumeration (<i>for in [no guaranteed order], for</i>)<br></li><li>deleting properties<br></li><li>global (object) variable to deal with global scope<br></li></ul></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>Chapter 4 - Functions</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">This chapter discussed a number of function concepts that were familiar (return values, scope), some that I've recently started using (closure, callbacks), and a number that I <b>really</b> need to go back to and play with more in order to develop a better understanding (module, cascade, curry, memoization).</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>Chapter 5 - Inheritance</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">The Inheritance chapter starts off with providing a \"pseudoclassical\" approach to JavaScript and how one might develop using a typical \"classes\" approach, then discusses the downsides of doing so (such as composing hierarchies that are unnecessarily deep and complicated).</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">Douglas then rewrites the previous example using prototypal inheritance and the functional pattern in order to show the benefit of doing things in a more \"natural\" way for the language.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>Chapter 6 - Arrays</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">After the Functions and Inheritance chapters (which contained a <u>lot</u> of new concepts), this chapter was <i>very</i> reassuring. Arrays in JavaScript have some differences from other languages (for example, an array's length is not an upper bound), but otherwise the aspects (such as deleting elements, enumerating, methods) are pretty familiar.</span></div>"
  },
  {
    "blog_title": "The Joys of Prototyping",
    "blog_date": "Thu Aug 10 2017 @ 21:50",
    "blog_photo": "prototypes.png",
    "blog_text": "<div><span style=\"white-space: normal;\">You were just assigned to a project that requires tech which you have never used, and quite possibly have never even heard of. So what can you do to start being productive as quickly as possible? One word - prototype.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>What is a Prototype?</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">According to <a href=\"https://en.wikipedia.org/wiki/Prototype\">Wikipedia</a>, a prototype is \"an early sample, model, or release of a product built to test a concept or process\". Additionally, \"it is important to realize that by their very definition, prototypes will represent some compromise from the final production design\".</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">In other words (<i>and specific to software development</i>), a prototype is a program that lets you develop as little or as much as you need to, in order to become familiar with and verify how some tech works. A prototype can be as small as a single method or as sophisticated as you want, with the ultimate goal to develop a deeper understanding of how something works.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>Why Prototype?</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">So you might ask - why bother taking the time to prototype? Wouldn't it be faster to get some examples and start working them into the production code?</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">Well, I can't claim to be an expert (based on how long I've been developing), but here are some points that I feel are worth strong consideration:</span></div><div><ol><li><i>A prototype is <u>pure</u>.</i></li><li><i>A prototype is <u>flexible</u>.</i></li><li><i>A prototype is your <u>sandbox</u> to play and learn.</i></li><li><i>Troubleshooting is <u>much</u> easier.</i></li><li><i>Integration of working prototype code is <u>much</u> easier.</i></li></ol></div><div><span style=\"white-space: normal;\">In a prototype the code can be reduced to only what is absolutely necessary, so dependencies and relationships are less likely to be obscured or influenced by other functions and features. You can experiment with different approaches and solutions as you are learning how things work and make sweeping changes without risk to the larger project.</span><br></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">And I may be speaking for myself here, but I <u>learn</u> best by playing with code - not by reading or watching videos, although those are invaluable when researching while getting started and troubleshooting.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>A Practical Example</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">Not too long ago, I was assigned to a project that was storing files in a database. The approach worked well enough during testing, but based on prior research and experience I advised against this approach. Fair enough, the team agreed that files would be stored elsewhere - in an AWS S3 bucket. And I was tasked with putting them there and rewriting all of the logic currently writing them to a database.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">Now at this point, I had not even <i>heard</i> of an S3 bucket, let alone know how to write files to one and read them back. And the present JavaScript and Ruby code involved with translating and saving the files involved a traversal of no less than three databases (PouchDB, Cloudant, PostgreSQL). &nbsp;So where to begin?</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">First, of course, was research and I found Amazon's guides to be a decent start. &nbsp;The greatest hurdle (<i>as usual</i>) was figuring out what the keywords and terms were, so that I could focus my searches and find practical examples that came close to what I was attempting to do.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">Once I had figured out how to (1) create an S3 bucket, (2) create an IAM user limited to accessing the bucket and (3) obtain the credentials necessary to access the bucket programmatically, I was ready to start prototyping.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">I began with trying to connect to S3 and getting a response. &nbsp;After <u>finally</u> getting that right, I worked on listing all of the S3 buckets (<i>just to verify the connection</i>). &nbsp;Then on to listing files in the bucket (<i>after manually uploading them through the Amazon S3 web console</i>). &nbsp;Then programmatically uploading a file to the bucket. &nbsp;And finally with reading a file from the bucket via a secure URL (<i>that expired after a short period of time</i>).</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">Every step involved a fair amount of research and playing in the sandbox, and the prototype itself is no great masterpiece. &nbsp;But it works and allowed me to integrate the necessary logic <u>much</u> more easily into the larger project.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\"><font size=\"4\"><b>Final Thoughts</b></font></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">If you haven't considered using prototypes before, hopefully this article will give you some solid reasons why you should. &nbsp;In the past two months, I've developed at least a dozen prototypes. &nbsp;And rather than being a time-sink, they have saved me countless hours and have allowed me learn a lot in a relatively short period of time. &nbsp;I sincerely hope they can do the same for you.</span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">And for anyone interested, here is the GitHub repository for the AWS S3 bucket prototype:</span></div><div><span style=\"white-space: normal;\"><a href=\"https://github.com/jverbosky/aws_s3_bucket\">https://github.com/jverbosky/aws_s3_bucket</a></span></div><div><span style=\"white-space: normal;\"><br></span></div><div><span style=\"white-space: normal;\">Details for running the app are included in the README.md file.</span></div>"
  }
]
